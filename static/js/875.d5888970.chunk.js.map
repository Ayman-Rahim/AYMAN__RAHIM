{"version":3,"file":"static/js/875.d5888970.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/motion-utils/dist/es/noop.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, isActive) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", isActive);\n    }\n    const callback = props[isActive ? \"onHoverStart\" : \"onHoverEnd\"];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current, props } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, true);\n            return (endEvent) => handleHoverEvent(this.node, endEvent, false);\n        }, { passive: !props.onHoverStart && !props.onHoverEnd });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from 'motion-dom';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from 'motion-utils';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.13.1\", `Attempting to mix Motion versions ${nextValue.version} with 11.13.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.13.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../utils/resolve-elements.mjs';\nimport { isDragActive } from './drag/state/is-active.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    resolveElements(elementOrSelector).forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return () => gestureAbortController.abort();\n}\n\nexport { hover };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const noop = (any) => any;\n\nexport { noop };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","has","step","schedule","queue","arguments","length","undefined","add","cancel","delete","process","frameData","clear","forEach","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","MotionGlobalConfig","useManualTiming","performance","now","Math","max","min","keepAlive","immediate","i","frame","cancelFrame","frameSteps","requestAnimationFrame","noop","clearTime","time","set","newTime","queueMicrotask","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","get","_target","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","values","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","sqrt","getValueTransition","transition","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","isNumericalString","splitCSSVariableRegex","getVariableValue","element","depth","invariant","token","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","trim","parseFloat","isCSSVariableToken","positionalKeys","isNumOrPxType","number","px","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","transform","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","percent","degrees","vw","vh","parse","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","maxDefaults","applyDefaultFilter","slice","floatRegex","unit","replace","defaultValue","functionRegex","complex","getAnimatableNone","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","alpha","originX","progressPercentage","originY","originZ","int","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","color","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","analyseComplexValue","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","warning","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","generateLinearEasing","resolution","points","numPoints","progress","substring","calcGeneratorVelocity","resolveValue","prevT","velocityPerSecond","springDefaults","mass","bounce","visualDuration","granular","default","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","a","b","calcAngularFreq","c","exp","d","e","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","offset","o","convertOffsetToTimes","defaultOffset","mapTimeToKeyframe","interpolate","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","Object","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","pipe","mix","reverse","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","Boolean","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","memo","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","hasOwnProperty","call","Element","prototype","unsupportedEasingFunctions","AcceleratedAnimation","owner","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","setWithVelocity","supports","HTMLElement","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","supportsScrollTimeline","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","source","originPoint","mixNumber","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","setDragLock","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","notifyListeners","subscriptionManager","_len","args","_key","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","_b","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","onTapStart","isDragActive","removePointerListener","removeFocusListener","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onHoverEnd","MotionContext","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","useIsomorphicLayoutEffect","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","isBrowser","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","indexOf","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","isCSSVariableName","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","motion","createDomVisualElement","ScrollTimeline","checkStringStartsWith","startsAsVariableToken","singleCssVariableRegex","arr","item","input","isClamp","mixer","inputLength","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","originStats","targetStats","indexes","var","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","numSubscriptions","getSize","init","useLayoutEffect","frameDuration","collectMotionValues","MotionValue","_this","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","isColorString","r","parseInt","splitColor","alpha$1","sanitize","rgbUnit","clampRgbUnit","singleColorRegex","testProp","isNullish","aName","bName","cName","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","createUnitType","endsWith","resolveElements","elementOrSelector","scope","selectorCache","elements","querySelectorAll","filterEvents","gestureAbortController","AbortController","eventOptions","signal","onPointerEnter","enterEvent","onPointerLeave","leaveEvent","abort","any"],"sourceRoot":""}